// <auto-generated />
using DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataLayer.Migrations
{
    [DbContext(typeof(EFDBContext))]
    partial class EFDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataLayer.Entityes.Directry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Html")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Html");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Title");

                    b.HasKey("Id")
                        .HasName("directry_primary_key");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Directry", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Html = "<b>Directory Content</b>",
                            Title = "First Directory"
                        },
                        new
                        {
                            Id = 2,
                            Html = "<b>Directory Content</b>",
                            Title = "Second Directory"
                        });
                });

            modelBuilder.Entity("DataLayer.Entityes.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DirectryId")
                        .HasColumnType("int");

                    b.Property<string>("Html")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Html");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Title");

                    b.HasKey("Id")
                        .HasName("material_primary_key");

                    b.HasIndex("DirectryId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Material", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DirectryId = 1,
                            Html = "<i>Material Content</i>",
                            Title = "First Material"
                        },
                        new
                        {
                            Id = 2,
                            DirectryId = 2,
                            Html = "<i>Material Content</i>",
                            Title = "Second Material"
                        },
                        new
                        {
                            Id = 3,
                            DirectryId = 2,
                            Html = "<i>Material Content</i>",
                            Title = "Third Material"
                        });
                });

            modelBuilder.Entity("DataLayer.Entityes.Material", b =>
                {
                    b.HasOne("DataLayer.Entityes.Directry", "Directry")
                        .WithMany("Materials")
                        .HasForeignKey("DirectryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Directry");
                });

            modelBuilder.Entity("DataLayer.Entityes.Directry", b =>
                {
                    b.Navigation("Materials");
                });
#pragma warning restore 612, 618
        }
    }
}
